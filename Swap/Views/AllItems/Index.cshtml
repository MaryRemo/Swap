@model IEnumerable<Swap.Models.Item>

@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@{ var user = await UserManager.GetUserAsync(User);}

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Img)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                <img width="60" src="@Html.DisplayFor(modelItem => item.Img)" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.User.FirstName)
            </td>

            @if (item.swappeds.All(s => s.SenderItem.User.Id != user.Id || s.ReceiverItem.User.Id != user.Id))
            {
                <td>
                    <a asp-action="CreateSwap" asp-route-id="@item.Id">Offer</a>
                </td>
            }
        </tr>
        }
    </tbody>
</table>
